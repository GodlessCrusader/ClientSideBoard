@inject ServerApiCaller _api

<div class="bg-dark position-relative">
    <h5>Media List</h5>
    <button class="btn-primary my-10 bg-info" @onclick=RefreshAsync>Refresh</button>
    @if (_files == null || _files.Count == 0)
    {
        <label>No media</label>
    }
    else
    {
        <div>
            <ul>
                @foreach (var file in _files)
                {
                    <li class="list-group-item">
                        <div>
                            <label>@file.UserDisplayName</label>
                            <label>Size : @file.Size bytes</label>
                            <img width="100" length="100" src="@string.Concat(SERVER_URI,file.Uri.Replace("..", string.Empty))">
                        </div>
                    </li>
                }
                
            </ul>
        </div>
    }
    
</div>
@code {
    [Parameter]
    public MediaType Type { get; set; }

    private const string SERVER_URI = "https://www.localhost:5001";

    private List<MediaFile>? _files { get; set; }

    private async Task RefreshAsync()
    {
        var responseMessage = await _api.GetUserMediaListAsync();
        if (responseMessage.IsSuccessStatusCode)
        {
            _files = await responseMessage.Content.ReadFromJsonAsync<List<MediaFile>>();
            StateHasChanged();
            return;
        }
        
    }

    protected override async Task OnInitializedAsync()
    {
        await RefreshAsync();
    }
}
